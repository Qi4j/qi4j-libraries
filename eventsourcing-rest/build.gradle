description = "Qi4j Event Sourcing Library for Restful applications."

jar { manifest { name = "Qi4j Library - Event Sourcing - Rest" }}

repositories {
  mavenRepo name: 'restlet-repo', urls: 'http://maven.restlet.org'
  mavenRepo name: 'aduna-repo', urls: "http://repo.aduna-software.org/maven2/releases/"
}

uploadArchives {
  repositories.mavenDeployer {
    pom {
      project {
        repositories {
          repository {
            id = 'aduna'
            url = 'http://repo.aduna-software.org/maven2/releases/'
          }
          repository {
            id = 'restlet'
            url = 'http://maven.restlet.org'
          }
        }
      }
      name = 'sshDeployer' // optional
      configuration = configurations.deployerJars
      repository(url: "scp://repository.ops4j.org/home/www/repository.ops4j.org/maven2/")
    }
  }
}


dependencies {
  compile(project(":org.qi4j.core:org.qi4j.core.api"))
  compile(project(":org.qi4j.core:org.qi4j.core.bootstrap"))
  compile(project(":org.qi4j.libraries:org.qi4j.library.eventsourcing"))
  compile(libraries.slf4j_api)

  compile("org.restlet.jee:org.restlet:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.atom:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.servlet:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.slf4j:$restletVersion")
  compile("org.restlet.jee:org.restlet.ext.xml:$restletVersion")

  testCompile(libraries.junit)
  testCompile(project(":org.qi4j.core:org.qi4j.core.testsupport"))
  testRuntime(project(":org.qi4j.core:org.qi4j.core.spi"))
  testRuntime(project(":org.qi4j.core:org.qi4j.core.runtime"))
  testRuntime(libraries.asm)
  testRuntime(libraries.asm_commons)
  testRuntime(libraries.slf4j_simple)
}